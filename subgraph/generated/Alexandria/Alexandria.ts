// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Alexandria__getTagByIdResultValue0Struct extends ethereum.Tuple {
  get id(): Bytes {
    return this[0].toBytes();
  }

  get name(): string {
    return this[1].toString();
  }

  get description(): string {
    return this[2].toString();
  }

  get deleted(): boolean {
    return this[3].toBoolean();
  }

  get creator(): Address {
    return this[4].toAddress();
  }
}

export class Alexandria__getTagByIndexResultValue0Struct extends ethereum.Tuple {
  get id(): Bytes {
    return this[0].toBytes();
  }

  get name(): string {
    return this[1].toString();
  }

  get description(): string {
    return this[2].toString();
  }

  get deleted(): boolean {
    return this[3].toBoolean();
  }

  get creator(): Address {
    return this[4].toAddress();
  }
}

export class Alexandria extends ethereum.SmartContract {
  static bind(address: Address): Alexandria {
    return new Alexandria("Alexandria", address);
  }

  countTags(): BigInt {
    let result = super.call("countTags", "countTags():(uint256)", []);

    return result[0].toBigInt();
  }

  try_countTags(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("countTags", "countTags():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getTagById(id: Bytes): Alexandria__getTagByIdResultValue0Struct {
    let result = super.call(
      "getTagById",
      "getTagById(bytes32):((bytes32,string,string,bool,address))",
      [ethereum.Value.fromFixedBytes(id)]
    );

    return changetype<Alexandria__getTagByIdResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getTagById(
    id: Bytes
  ): ethereum.CallResult<Alexandria__getTagByIdResultValue0Struct> {
    let result = super.tryCall(
      "getTagById",
      "getTagById(bytes32):((bytes32,string,string,bool,address))",
      [ethereum.Value.fromFixedBytes(id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Alexandria__getTagByIdResultValue0Struct>(value[0].toTuple())
    );
  }

  getTagByIndex(index: BigInt): Alexandria__getTagByIndexResultValue0Struct {
    let result = super.call(
      "getTagByIndex",
      "getTagByIndex(uint256):((bytes32,string,string,bool,address))",
      [ethereum.Value.fromUnsignedBigInt(index)]
    );

    return changetype<Alexandria__getTagByIndexResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getTagByIndex(
    index: BigInt
  ): ethereum.CallResult<Alexandria__getTagByIndexResultValue0Struct> {
    let result = super.tryCall(
      "getTagByIndex",
      "getTagByIndex(uint256):((bytes32,string,string,bool,address))",
      [ethereum.Value.fromUnsignedBigInt(index)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Alexandria__getTagByIndexResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _tagLogicAddr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreateTagCall extends ethereum.Call {
  get inputs(): CreateTagCall__Inputs {
    return new CreateTagCall__Inputs(this);
  }

  get outputs(): CreateTagCall__Outputs {
    return new CreateTagCall__Outputs(this);
  }
}

export class CreateTagCall__Inputs {
  _call: CreateTagCall;

  constructor(call: CreateTagCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get description(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class CreateTagCall__Outputs {
  _call: CreateTagCall;

  constructor(call: CreateTagCall) {
    this._call = call;
  }
}

export class DeleteTagByIdCall extends ethereum.Call {
  get inputs(): DeleteTagByIdCall__Inputs {
    return new DeleteTagByIdCall__Inputs(this);
  }

  get outputs(): DeleteTagByIdCall__Outputs {
    return new DeleteTagByIdCall__Outputs(this);
  }
}

export class DeleteTagByIdCall__Inputs {
  _call: DeleteTagByIdCall;

  constructor(call: DeleteTagByIdCall) {
    this._call = call;
  }

  get id(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class DeleteTagByIdCall__Outputs {
  _call: DeleteTagByIdCall;

  constructor(call: DeleteTagByIdCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateTagDescriptionCall extends ethereum.Call {
  get inputs(): UpdateTagDescriptionCall__Inputs {
    return new UpdateTagDescriptionCall__Inputs(this);
  }

  get outputs(): UpdateTagDescriptionCall__Outputs {
    return new UpdateTagDescriptionCall__Outputs(this);
  }
}

export class UpdateTagDescriptionCall__Inputs {
  _call: UpdateTagDescriptionCall;

  constructor(call: UpdateTagDescriptionCall) {
    this._call = call;
  }

  get id(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get description(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class UpdateTagDescriptionCall__Outputs {
  _call: UpdateTagDescriptionCall;

  constructor(call: UpdateTagDescriptionCall) {
    this._call = call;
  }
}

export class UpgradeTagLogicCall extends ethereum.Call {
  get inputs(): UpgradeTagLogicCall__Inputs {
    return new UpgradeTagLogicCall__Inputs(this);
  }

  get outputs(): UpgradeTagLogicCall__Outputs {
    return new UpgradeTagLogicCall__Outputs(this);
  }
}

export class UpgradeTagLogicCall__Inputs {
  _call: UpgradeTagLogicCall;

  constructor(call: UpgradeTagLogicCall) {
    this._call = call;
  }

  get _tagLogicAddr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpgradeTagLogicCall__Outputs {
  _call: UpgradeTagLogicCall;

  constructor(call: UpgradeTagLogicCall) {
    this._call = call;
  }
}
